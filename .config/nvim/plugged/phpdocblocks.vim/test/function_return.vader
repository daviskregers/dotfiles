
======================================================

Given (Return type defined in declaration - User object):
  public function test(): User
  {
      if($test === "test") {
          return new User;
      }
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return User
   */
  public function test(): User
  {
      if($test === "test") {
          return new User;
      }
  }

======================================================

Given (Return type defined in declaration - int):
  public function test(): int
  {
      if($test === "test") {
          return $this->getInt();
      }
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return int
   */
  public function test(): int
  {
      if($test === "test") {
          return $this->getInt();
      }
  }

======================================================

Given (Return type defined in declaration - User object - Nullable):
  public function test(): ?User
  {
      if($test === "test") {
          return new User;
      }
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return User|null
   */
  public function test(): ?User
  {
      if($test === "test") {
          return new User;
      }
  }

======================================================

Given (Return multiple - string|int - two int returns):
  public function test()
  {
      if($test) {
          return "test\"test';)(}{";
      } elseif($test === "test") {
          return 7346734;
      } else {
          return 7346734;
      }
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return string|int
   */
  public function test()
  {
      if($test) {
          return "test\"test';)(}{";
      } elseif($test === "test") {
          return 7346734;
      } else {
          return 7346734;
      }
  }

======================================================

Given (Return multiple - string|int|array):
  public function test()
  {
      if($test) {
          return "test\"test';)(}{";
      } elseif($test === "test") {
          return 7346734;
      } else {
          return ["item1","item2","item3"];
      }
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return string|int|array
   */
  public function test()
  {
      if($test) {
          return "test\"test';)(}{";
      } elseif($test === "test") {
          return 7346734;
      } else {
          return ["item1","item2","item3"];
      }
  }

======================================================

Given (Return multiple - strings):
  public function test()
  {
      if($test) {
          return "test\"test';)(}{";
      } elseif($test === "test") {
          return "test\"test';)(}{";
      } else {
          return "test\"test';)(}{";
      }
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return string
   */
  public function test()
  {
      if($test) {
          return "test\"test';)(}{";
      } elseif($test === "test") {
          return "test\"test';)(}{";
      } else {
          return "test\"test';)(}{";
      }
  }

======================================================

Given (Return string - single quotes):
  public function test()
  {
      return 'test\'test";)(}{';
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return string
   */
  public function test()
  {
      return 'test\'test";)(}{';
  }

======================================================

Given (Return string - double quotes):
  public function test()
  {
      return "test\"test';)(}{";
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return string
   */
  public function test()
  {
      return "test\"test';)(}{";
  }

======================================================

Given (Return string - multi-line - double quotes):
  public function test()
  {

  return "fu'nct,
  ion\" na
  me()}{";

  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return string
   */
  public function test()
  {

  return "fu'nct,
  ion\" na
  me()}{";

  }

======================================================

Given (Return string - multi-line - single quotes):
  public function test()
  {

  return 'fu"nct,
  ion\' na
  me()}{';

  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return string
   */
  public function test()
  {

  return 'fu"nct,
  ion\' na
  me()}{';

  }

======================================================

Given (Return void - no return statement):
  public function test()
  {
      $var = "no return";
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return void
   */
  public function test()
  {
      $var = "no return";
  }

======================================================

Given (Return void - return statement empty):
  public function test()
  {
      $var = "empty return";
      return;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return void
   */
  public function test()
  {
      $var = "empty return";
      return;
  }

======================================================

Given (Return integer - unsigned):
  public function test()
  {
      return 74348378437473473;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return int
   */
  public function test()
  {
      return 74348378437473473;
  }

======================================================

Given (Return integer - signed positive):
  public function test()
  {
      return +6;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return int
   */
  public function test()
  {
      return +6;
  }

======================================================

Given (Return integer - signed negative):
  public function test()
  {
      return -38748343473748373473847384;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return int
   */
  public function test()
  {
      return -38748343473748373473847384;
  }


======================================================

Given (Return float - unsigned):
  public function test()
  {
      return 74348378.437473473;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return float
   */
  public function test()
  {
      return 74348378.437473473;
  }

======================================================

Given (Return float - signed positive):
  public function test()
  {
      return +6.6;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return float
   */
  public function test()
  {
      return +6.6;
  }

======================================================

Given (Return float - signed negative):
  public function test()
  {
      return -387483434737.48373473847384;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return float
   */
  public function test()
  {
      return -387483434737.48373473847384;
  }

======================================================

Given (Return boolean - true - lowercase):
  public function test()
  {
      return true;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return bool
   */
  public function test()
  {
      return true;
  }

======================================================

Given (Return boolean - false - lowercase):
  public function test()
  {
      return false;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return bool
   */
  public function test()
  {
      return false;
  }

======================================================

Given (Return boolean - true - mixed-case):
  public function test()
  {
      return TrUE;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return bool
   */
  public function test()
  {
      return TrUE;
  }

======================================================

Given (Return boolean - false - mixed-case):
  public function test()
  {
      return fAlSe;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return bool
   */
  public function test()
  {
      return fAlSe;
  }

======================================================

Given (Return array - array()):
  public function test()
  {
      return array("test",'test');
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return array
   */
  public function test()
  {
      return array("test",'test');
  }

======================================================

Given (Return array - array []):
  public function test()
  {
      return ["test", 'test'];
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return array
   */
  public function test()
  {
      return ["test", 'test'];
  }

======================================================

Given (Return null):
  public function test()
  {
      return null;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return null
   */
  public function test()
  {
      return null;
  }

======================================================

Given (Return null - Uppercase):
  public function test()
  {
      return NULL;
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return null
   */
  public function test()
  {
      return NULL;
  }

======================================================

Given (Return function - String as parameter):
  public function test()
  {
      return myFunction("string");
  }

Execute:
  call phpdocblocks#insert("test")

Expect:
  /**
   * test
   *
   * @return 
   */
  public function test()
  {
      return myFunction("string");
  }
