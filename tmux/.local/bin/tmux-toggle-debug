#!/bin/sh
# Debug version of tmux-toggle to see what's happening

TOGGLE_ID="${1:-1}"

echo "=== TOGGLE DEBUG ===" >&2

# Get current context
SESSION_ID=$(tmux display-message -p '#{session_id}')
WINDOW_ID=$(tmux display-message -p '#{window_id}')
PANE_ID=$(tmux display-message -p '#{pane_id}')

echo "Current context: SESSION=$SESSION_ID WINDOW=$WINDOW_ID PANE=$PANE_ID" >&2

# Strip special chars
SESSION_NUM=$(echo "$SESSION_ID" | tr -d '$@%')
WINDOW_NUM=$(echo "$WINDOW_ID" | tr -d '$@%')
PANE_NUM=$(echo "$PANE_ID" | tr -d '$@%')

MARKER_NAME="toggle_${SESSION_NUM}_${WINDOW_NUM}_${PANE_NUM}_${TOGGLE_ID}"
echo "Looking for marker: $MARKER_NAME" >&2

# Check for marker window
MARKER_EXISTS=$(tmux list-windows -a -F '#{window_name}' 2>/dev/null | grep -Fx "${MARKER_NAME}" || true)
echo "Marker window exists: '$MARKER_EXISTS'" >&2

if [ -n "$MARKER_EXISTS" ]; then
    echo "ACTION: Restoring pane from marker window" >&2
else
    # Check for toggle pane in current window
    echo "All panes in window:" >&2
    tmux list-panes -t "${WINDOW_ID}" -F '  %#{pane_id}: #{pane_title}' >&2

    TOGGLE_PANE=$(tmux list-panes -t "${WINDOW_ID}" -F '#{pane_id}:#{pane_title}' 2>/dev/null | grep ":${MARKER_NAME}$" | cut -d: -f1 || true)
    echo "Found toggle pane: '$TOGGLE_PANE'" >&2

    if [ -n "$TOGGLE_PANE" ]; then
        echo "ACTION: Hiding toggle pane $TOGGLE_PANE" >&2
    else
        echo "ACTION: Creating new toggle pane" >&2
    fi
fi

# Now run the real script
exec /Users/daviskregers/.dotfiles/tmux/.local/bin/tmux-toggle "$@"
